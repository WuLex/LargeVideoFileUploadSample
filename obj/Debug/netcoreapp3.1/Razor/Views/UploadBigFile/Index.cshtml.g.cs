#pragma checksum "E:\workproject\NetCoreWebDemo\VideoDemo\Views\UploadBigFile\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "254be81fdaf84f00fe51d42dccc39f01279d4542"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UploadBigFile_Index), @"mvc.1.0.view", @"/Views/UploadBigFile/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\workproject\NetCoreWebDemo\VideoDemo\Views\_ViewImports.cshtml"
using VideoDemo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\workproject\NetCoreWebDemo\VideoDemo\Views\_ViewImports.cshtml"
using VideoDemo.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"254be81fdaf84f00fe51d42dccc39f01279d4542", @"/Views/UploadBigFile/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e173d7afc8f07217e5a4d4fd59c78df62dd15576", @"/Views/_ViewImports.cshtml")]
    public class Views_UploadBigFile_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/ajax.1.5.2.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "E:\workproject\NetCoreWebDemo\VideoDemo\Views\UploadBigFile\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1>Index</h1>\r\n\r\n<!--上传视频-->\r\n<div>\r\n    <div>\r\n        <div>\r\n            <div>\r\n                <span");
            BeginWriteAttribute("class", " class=\"", 149, "\"", 157, 0);
            EndWriteAttribute();
            WriteLiteral(@">上传视频</span>
            </div>
            <input id=""uploadvideofile"" type=""file"" accept=""video/mp4,video/quicktime"" class=""up-video"" />
        </div>
    </div>
    <div id=""videoplayer"" style=""display: none""></div>
    <div id=""videooutput""></div>
    <div>
        <p style=""color: #797979; margin-top: 5px; font-size: 12px;"">视频格式必须为: mp4或mov。视频时长须在15秒以内，超出时长系统将自动截取前15秒内容。</p>
    </div>
</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "254be81fdaf84f00fe51d42dccc39f01279d45424365", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<!--传视频相关-->
<script type=""text/javascript"">
    $('#uploadvideofile').change(function() {
        var file, videoURL, windowURL;
        var filemaxsize = 1024 * 1024 * 20; //200M
        if (fileValid(this, filemaxsize, 'video')) {
            file = this.files[0];
            try {
                var temp = ajax.upload_big(
                    ""UpLoadBigFile/UploadVideo?opration=2222"", //文件上传地址
                    ""#uploadvideofile"", //input = file 选择器
                    1024 * 1024, //切割文件大小
                    ""*"", //文件限制类型 mime类型
                    function(index) { //上传成功事件
                        //console.log(""slice [ "" + index + ""] uploaded"")
                    },
                    function(index, length) { //上传进度事件
                        //console.log(index + ""/"" + length);
                        //var ratio = (index / length) * 100.00 | 0.00;
                        //var progress = $("".progress > div"");
                        //progress.css(""width"", ratio + ""%"");
 ");
            WriteLiteral(@"                       //progress.attr(""aria-valuenow"", index);
                        //progress.attr(""aria-valuemax"", length);
                        //progress.children(""span"").text("""" + ratio + ""%"");
                    },
                    function(index, length) { //超时处理事件
                        console.log(index + ""/"" + length);
                    }
                );
            } catch (e) {
                console.log(e.name + "" "" + e.message);
            }
            videoURL = null;
            windowURL = window.URL || window.webkitURL;
            videoURL = windowURL.createObjectURL(file);
            $('#videoplayer').html('<video src=""' + videoURL + '"" controls=""controls""></video>');
            setTimeout(function() { createIMG(); }, 800);
        }
    });

    //验证上传文件大小和类型
    /**
     *
     * param {this} value_ [获取input对象，一般为this]
     * param {[number]} size_ [文件限制的大小，单位为kb]
     * param {[string]} type_ [文件类别]
     * param {[function]} callback [验证通过的");
            WriteLiteral(@"回调]
     */
    function fileValid(value_, size_, type_, callback) {
        var file = value_.files[0];
        var fileSize = (file.size / 1024).toFixed(0); //文件大小
        var fileType = value_.value.substring(value_.value.lastIndexOf(""."")); //文件类型

        if (fileSize > size_) {
            alert('视频过大,请选择小于200MB的视频！');
            return false;
        }
        switch (type_) {
        case 'video':
            if (!fileType.match(/.mp4|.mov/i)) {
                alert('请上传正确格式的视频!');
                return false;
            }
            break;
        default:
            alert('参数设置不正确！');
            return false;
            break;
        }
        return true;
    }

    var createIMG = function() {
        var scale = 0.25,
            video = $('#videoplayer').find('video')[0],
            canvas = document.createElement(""canvas""),
            canvasFill = canvas.getContext('2d');
        canvas.width = video.videoWidth * scale;
        canvas.height = video.vid");
            WriteLiteral(@"eoHeight * scale;
        canvasFill.drawImage(video, 0, 0, canvas.width, canvas.height);
        var src = canvas.toDataURL(""image/jpeg"");
        $('#videooutput').html('<img id=""imgSmallView"" src=""' + src + '"" alt=""预览图"" />');
    }
</script>

<script>
    (function () {
        //$(""#uploadvideofile"").change(function () {
        //    var temp = ajax.upload_big(
        //        ""AjaxHandlers/UploadVideoHandler.ashx"", //文件上传地址
        //        ""#uploadvideofile"", //input = file 选择器
        //        1024 * 1024, //切割文件大小
        //        ""*"", //文件限制类型 mime类型
        //        function(index) { //上传成功事件
        //            //console.log(""slice [ "" + index + ""] uploaded"")
        //        },
        //        function(index, length) { //上传进度事件
        //            //console.log(index + ""/"" + length);
        //            //var ratio = (index / length) * 100.00 | 0.00;
        //            //var progress = $("".progress > div"");
        //            //progress.css(""width"", rati");
            WriteLiteral(@"o + ""%"");
        //            //progress.attr(""aria-valuenow"", index);
        //            //progress.attr(""aria-valuemax"", length);
        //            //progress.children(""span"").text("""" + ratio + ""%"");
        //        },
        //        function(index, length) { //超时处理事件
        //            console.log(index + ""/"" + length);
        //        }
        //    );
        //    console.log(temp);
        //});
    })();
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
